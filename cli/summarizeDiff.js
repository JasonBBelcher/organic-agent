const fs = require("fs");
const path = require("path");
const { safeWriteFile } = require("./utils");

const diffFile = process.argv[2];
if (!diffFile) {
  console.error("Usage: node cli/summarizeDiff.js data/diffs/tree_diff_XXXXX.md");
  process.exit(1);
}

if (!fs.existsSync(diffFile)) {
  console.error(`❌ Diff file not found: ${diffFile}`);
  process.exit(1);
}

const diffContent = fs.readFileSync(diffFile, "utf-8");

function analyzeDiff(diffText) {
  const lines = diffText.split("\n");
  const additions = lines.filter(line => line.startsWith("+ ")).length;
  const deletions = lines.filter(line => line.startsWith("- ")).length;
  
  // Extract key patterns from additions
  const addedContent = lines
    .filter(line => line.startsWith("+ "))
    .map(line => line.substring(2))
    .join("\n");
  
  // Identify major themes
  let themes = [];
  if (addedContent.includes("Architecture")) themes.push("Architecture Patterns");
  if (addedContent.includes("Security")) themes.push("Security Design");
  if (addedContent.includes("Performance")) themes.push("Performance Optimization");
  if (addedContent.includes("Error")) themes.push("Error Handling");
  if (addedContent.includes("Deployment")) themes.push("Deployment Strategy");
  if (addedContent.includes("API")) themes.push("API Design");
  if (addedContent.includes("Testing")) themes.push("Testing & Validation");
  if (addedContent.includes("Documentation")) themes.push("Documentation Strategy");
  if (addedContent.includes("Community")) themes.push("Community Development");
  
  return {
    additions,
    deletions,
    themes,
    addedContent
  };
}

const analysis = analyzeDiff(diffContent);

const summary = `# 📊 Knowledge Evolution Summary

**Generated from:** ${path.basename(diffFile)}
**Timestamp:** ${new Date().toISOString()}

## Changes Overview
- **Additions:** ${analysis.additions} new lines of knowledge
- **Deletions:** ${analysis.deletions} removed lines
- **Net Growth:** +${analysis.additions - analysis.deletions} lines

## Knowledge Themes Added
${analysis.themes.map(theme => `- ${theme}`).join("\n")}

## Belief Evolution Analysis

### Knowledge Expansion
The organic learning tree has grown significantly with new architectural insights and patterns. Key areas of expansion include:

${analysis.themes.slice(0, 3).map(theme => `- **${theme}**: New patterns and principles identified`).join("\n")}

### Conceptual Depth Increase
${analysis.additions > 50 ? "Major conceptual expansion" : "Incremental knowledge refinement"} detected with ${analysis.additions} new knowledge points added.

### Learning Acceleration
This diff represents ${analysis.themes.length > 5 ? "accelerated" : "steady"} learning across multiple domains, indicating ${analysis.themes.length > 5 ? "rapid knowledge acquisition" : "focused domain exploration"}.

## Meta-Learning Insights
- The knowledge tree structure successfully captures complex architectural patterns
- Cross-domain insights are being synthesized effectively
- Pattern recognition is improving with each learning session

---
*This summary was auto-generated by the organic learning agent's diff analysis system.*
`;

const outputPath = diffFile.replace("diffs", "summaries").replace("tree_diff_", "evolution_summary_");
safeWriteFile(outputPath, summary);

console.log("✅ Evolution summary generated:", outputPath);
